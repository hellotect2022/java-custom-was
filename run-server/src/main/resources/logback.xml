<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <appender name="FILE" class="ch.qos.logback.core.FileAppender">
        <file>logFile.log</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>logFile.%d{yyyy-MM-dd}.log</fileNamePattern>
            <maxHistory>30</maxHistory>
            <totalSizeCap>3GB</totalSizeCap>
        </rollingPolicy>
        <encoder>
            <pattern>%date %level [%thread] %logger{10} [%file:%line] %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- AsyncAppender로 감싸기 -->
    <appender name="ASYNC_CONSOLE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>8192</queueSize> <!-- 큐 버퍼 크기 (기본: 256) -->
        <discardingThreshold>0</discardingThreshold> <!-- 과부하 시 삭제 기준 (0=안버림) -->
        <includeCallerData>true</includeCallerData> <!-- %caller, %class 등 사용 시 필요 -->
        <appender-ref ref="STDOUT" />
    </appender>

    <!-- AsyncAppender로 감싸기 -->
    <appender name="ASYNC_FILE" class="ch.qos.logback.classic.AsyncAppender">
        <queueSize>8192</queueSize> <!-- 큐 버퍼 크기 (기본: 256) -->
        <discardingThreshold>0</discardingThreshold> <!-- 과부하 시 삭제 기준 (0=안버림) -->
        <includeCallerData>true</includeCallerData> <!-- %caller, %class 등 사용 시 필요 -->
        <appender-ref ref="FILE" />
    </appender>

    <root level="debug">
<!--        <appender-ref ref="FILE" />-->
<!--        <appender-ref ref="STDOUT" />-->
        <appender-ref ref="ASYNC_FILE" />
        <appender-ref ref="ASYNC_CONSOLE" />
    </root>
</configuration>